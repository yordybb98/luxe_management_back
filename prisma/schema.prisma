// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

//////////////////////////
//////////ENUMS///////////
//////////////////////////
enum Permission {
  // ViewClients
  // CreateClients
  // UpdateClients
  // DeleteClients

  // ViewDepartments
  // CreateDepartments
  // UpdateDepartments
  // DeleteDepartments

  ViewOrders
  ViewAllOrders
  CreateOrders
  UpdateOrders
  DeleteOrders
  AssignTechnician
  AssignDesigner
  FinishOrders
  FinishTasks
  EditTasks
  CancelTasks

  // ViewProjects
  // CreateProjects
  // UpdateProjects
  // DeleteProjects

  ViewRoles
  CreateRoles
  UpdateRoles
  DeleteRoles

  // ViewStatus
  // CreateStatus
  // UpdateStatus
  // DeleteStatus

  ViewUsers
  CreateUsers
  UpdateUsers
  DeleteUsers
}

///////////////////////////
//////////MODELS///////////
//////////////////////////
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  username String @unique
  email    String @unique
  password String
  orders   Int[]
  // department   Department? @relation(fields: [departmentId], references: [id])
  // departmentId Int?
  role     Role   @relation(fields: [roleId], references: [id])
  roleId   Int
}

// model Order {
//   id           Int      @id @default(autoincrement())
//   name         String
//   description  String
//   image        String
//   status       Status   @relation(fields: [statusId], references: [id])
//   statusId     Int
//   userAssigned User     @relation(fields: [userId], references: [id])
//   userId       Int
//   project      Project? @relation(fields: [projectId], references: [id])
//   projectId    Int?
//   client       Client   @relation(fields: [clientId], references: [id])
//   clientId     Int
//   createdAt    DateTime
//   updatedAt    DateTime
//   logs         String[]
// }

// model Status {
//   id    Int     @id @default(autoincrement())
//   name  String
//   order Order[]
// }

// model Department {
//   id    Int    @id @default(autoincrement())
//   name  String
//   users User[]
// }

// model Client {
//   id          Int       @id @default(autoincrement())
//   name        String
//   description String
//   email       String
//   mailing     String
//   phone       String
//   address     String
//   projects    Project[]
//   orders      Order[]
// }

// model Project {
//   id          Int     @id @default(autoincrement())
//   name        String
//   description String
//   orders      Order[]
//   client      Client  @relation(fields: [clientId], references: [id])
//   clientId    Int
// }

model Role {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  permissions Permission[]
  users       User[]
}
